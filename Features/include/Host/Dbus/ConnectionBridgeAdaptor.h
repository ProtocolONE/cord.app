/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -v -a ConnectionBridgeAdaptor -c ConnectionBridgeAdaptor ConnectionBridge.interface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef CONNECTIONBRIDGEADAPTOR_H_1414479023
#define CONNECTIONBRIDGEADAPTOR_H_1414479023

#include <Host/Bridge/Credential.h>

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.gamenet.dbus.Connection
 */
class ConnectionBridgeAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.gamenet.dbus.Connection")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.gamenet.dbus.Connection\">\n"
"    <signal name=\"wrongCredential\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"userId\"/>\n"
"    </signal>\n"
"    <signal name=\"pong\"/>\n"
"    <method name=\"setApplicationName\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"applicationName\"/>\n"
"    </method>\n"
"    <method name=\"ping\"/>\n"
"    <method name=\"setCredential\">\n"
"      <arg direction=\"in\" type=\"a(sii)\" name=\"credential\"/>\n"
"      <annotation value=\"GameNet::Host::Bridge::Credential\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </method>\n"
"    <method name=\"setSecondCredential\">\n"
"      <arg direction=\"in\" type=\"a(sii)\" name=\"credential\"/>\n"
"      <annotation value=\"GameNet::Host::Bridge::Credential\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ConnectionBridgeAdaptor(QObject *parent);
    virtual ~ConnectionBridgeAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void ping();
    void setApplicationName(const QString &applicationName);
    void setCredential(GameNet::Host::Bridge::Credential credential);
    void setSecondCredential(GameNet::Host::Bridge::Credential credential);
Q_SIGNALS: // SIGNALS
    void pong();
    void wrongCredential(const QString &userId);
};

#endif
