/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -v -a ExecutorBridgeAdaptor -c ExecutorBridgeAdaptor ExecutorBridge.interface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef EXECUTORBRIDGEADAPTOR_H
#define EXECUTORBRIDGEADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.protocolone.launcher.dbus.Executor
 */
class ExecutorBridgeAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.protocolone.launcher.dbus.Executor")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.protocolone.launcher.dbus.Executor\">\n"
"    <signal name=\"serviceStarted\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"serviceId\"/>\n"
"    </signal>\n"
"    <signal name=\"serviceFinished\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"serviceId\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"finishState\"/>\n"
"    </signal>\n"
"    <method name=\"execute\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"serviceId\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"accessToken\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"acccessTokenExpiredTime\"/>\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\"/>\n"
"    </method>\n"
"    <method name=\"isGameStarted\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"serviceId\"/>\n"
"    </method>\n"
"    <method name=\"isAnyGameStarted\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"terminateGame\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"serviceId\"/>\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\"/>\n"
"    </method>\n"
"    <method name=\"terminateGame\">\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ExecutorBridgeAdaptor(QObject *parent);
    virtual ~ExecutorBridgeAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    Q_NOREPLY void execute(const QString &serviceId, const QString &accessToken, const QString &acccessTokenExpiredTime);
    bool isAnyGameStarted();
    bool isGameStarted(const QString &serviceId);
    Q_NOREPLY void terminateGame();
    Q_NOREPLY void terminateGame(const QString &serviceId);
Q_SIGNALS: // SIGNALS
    void serviceFinished(const QString &serviceId, int finishState);
    void serviceStarted(const QString &serviceId);
};

#endif
