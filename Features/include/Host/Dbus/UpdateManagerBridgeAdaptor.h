/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -V -a UpdateManagerBridgeAdaptor -c UpdateManagerBridgeAdaptor UpdateManagerBridge.interface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef UPDATEMANAGERBRIDGEADAPTOR_H
#define UPDATEMANAGERBRIDGEADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.protocolone.launcher.dbus.Updater
 */
class UpdateManagerBridgeAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.protocolone.launcher.dbus.Updater")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.protocolone.launcher.dbus.Updater\">\n"
"    <signal name=\"downloadUpdateProgress\">\n"
"      <arg direction=\"out\" type=\"t\" name=\"currentSize\"/>\n"
"      <arg direction=\"out\" type=\"t\" name=\"totalSize\"/>\n"
"    </signal>\n"
"    <signal name=\"updatesFound\"/>\n"
"    <signal name=\"noUpdatesFound\"/>\n"
"    <signal name=\"downloadRetryNumber\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"retryNumber\"/>\n"
"    </signal>\n"
"    <signal name=\"allCompleted\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"isNeedRestart\"/>\n"
"    </signal>\n"
"    <signal name=\"updateStateChanged\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"updateState\"/>\n"
"    </signal>\n"
"    <signal name=\"updateError\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"errorCode\"/>\n"
"    </signal>\n"
"    <method name=\"updateState\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    UpdateManagerBridgeAdaptor(QObject *parent);
    virtual ~UpdateManagerBridgeAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    int updateState();
Q_SIGNALS: // SIGNALS
    void allCompleted(bool isNeedRestart);
    void downloadRetryNumber(int retryNumber);
    void downloadUpdateProgress(qulonglong currentSize, qulonglong totalSize);
    void noUpdatesFound();
    void updateError(int errorCode);
    void updateStateChanged(int updateState);
    void updatesFound();
};

#endif
