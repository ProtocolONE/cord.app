/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -V -p MessageAdapterBridgeProxy -c MessageAdapterBridgeProxy MessageAdapterBridge.interface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MESSAGEADAPTERBRIDGEPROXY_H
#define MESSAGEADAPTERBRIDGEPROXY_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface local.MessageAdapterBridge
 */
class MessageAdapterBridgeProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "local.MessageAdapterBridge"; }

public:
    MessageAdapterBridgeProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~MessageAdapterBridgeProxy();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> messageRequestResult(int messageId, int buttonId)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(messageId) << QVariant::fromValue(buttonId);
        return asyncCallWithArgumentList(QStringLiteral("messageRequestResult"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void messageRequest(int messageId, const QString &title, const QString &text, int buttons, int icon);
};

namespace local {
  typedef ::MessageAdapterBridgeProxy MessageAdapterBridge;
}
#endif
