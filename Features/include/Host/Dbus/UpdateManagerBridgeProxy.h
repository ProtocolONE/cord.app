/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -V -p UpdateManagerBridgeProxy -c UpdateManagerBridgeProxy UpdateManagerBridge.interface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef UPDATEMANAGERBRIDGEPROXY_H
#define UPDATEMANAGERBRIDGEPROXY_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.protocolone.launcher.dbus.Updater
 */
class UpdateManagerBridgeProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.protocolone.launcher.dbus.Updater"; }

public:
    UpdateManagerBridgeProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~UpdateManagerBridgeProxy();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<int> updateState()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("updateState"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void allCompleted(bool isNeedRestart);
    void downloadRetryNumber(int retryNumber);
    void downloadUpdateProgress(qulonglong currentSize, qulonglong totalSize);
    void noUpdatesFound();
    void updateError(int errorCode);
    void updateStateChanged(int updateState);
    void updatesFound();
};

namespace com {
  namespace p1 {
    namespace dbus {
      typedef ::UpdateManagerBridgeProxy Updater;
    }
  }
}
#endif
