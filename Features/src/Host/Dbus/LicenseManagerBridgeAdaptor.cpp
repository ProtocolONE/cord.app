/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -V -a LicenseManagerBridgeAdaptor -c LicenseManagerBridgeAdaptor LicenseManagerBridge.interface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include <Host/Dbus/LicenseManagerBridgeAdaptor.h>
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class LicenseManagerBridgeAdaptor
 */

LicenseManagerBridgeAdaptor::LicenseManagerBridgeAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

LicenseManagerBridgeAdaptor::~LicenseManagerBridgeAdaptor()
{
    // destructor
}

void LicenseManagerBridgeAdaptor::acceptLicense(const QString &serviceId, const QString &hash)
{
    // handle method call com.protocolone.launcher.dbus.LicenseManager.acceptLicense
    QMetaObject::invokeMethod(parent(), "acceptLicense", Q_ARG(QString, serviceId), Q_ARG(QString, hash));
}

void LicenseManagerBridgeAdaptor::acceptWebLicense()
{
    // handle method call com.protocolone.launcher.dbus.LicenseManager.acceptWebLicense
    QMetaObject::invokeMethod(parent(), "acceptWebLicense");
}

bool LicenseManagerBridgeAdaptor::hasAcceptedLicense(const QString &serviceId)
{
    // handle method call com.protocolone.launcher.dbus.LicenseManager.hasAcceptedLicense
    bool out0;
    QMetaObject::invokeMethod(parent(), "hasAcceptedLicense", Q_RETURN_ARG(bool, out0), Q_ARG(QString, serviceId));
    return out0;
}

bool LicenseManagerBridgeAdaptor::hasAcceptedLicense()
{
    // handle method call com.protocolone.launcher.dbus.LicenseManager.hasAcceptedLicense
    bool out0;
    QMetaObject::invokeMethod(parent(), "hasAcceptedLicense", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool LicenseManagerBridgeAdaptor::hasAcceptedWebLicense()
{
    // handle method call com.protocolone.launcher.dbus.LicenseManager.hasAcceptedWebLicense
    bool out0;
    QMetaObject::invokeMethod(parent(), "hasAcceptedWebLicense", Q_RETURN_ARG(bool, out0));
    return out0;
}

