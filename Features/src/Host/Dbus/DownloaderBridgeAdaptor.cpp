/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -V -a DownloaderBridgeAdaptor -c DownloaderBridgeAdaptor DownloaderBridge.interface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include <Host/Dbus/DownloaderBridgeAdaptor.h>
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class DownloaderBridgeAdaptor
 */

DownloaderBridgeAdaptor::DownloaderBridgeAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

DownloaderBridgeAdaptor::~DownloaderBridgeAdaptor()
{
    // destructor
}

bool DownloaderBridgeAdaptor::isAnyServiceInProgress()
{
    // handle method call com.protocolone.launcher.dbus.Downloader.isAnyServiceInProgress
    bool out0;
    QMetaObject::invokeMethod(parent(), "isAnyServiceInProgress", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool DownloaderBridgeAdaptor::isInProgress(const QString &serviceId)
{
    // handle method call com.protocolone.launcher.dbus.Downloader.isInProgress
    bool out0;
    QMetaObject::invokeMethod(parent(), "isInProgress", Q_RETURN_ARG(bool, out0), Q_ARG(QString, serviceId));
    return out0;
}

bool DownloaderBridgeAdaptor::isInstalled(const QString &serviceId)
{
    // handle method call com.protocolone.launcher.dbus.Downloader.isInstalled
    bool out0;
    QMetaObject::invokeMethod(parent(), "isInstalled", Q_RETURN_ARG(bool, out0), Q_ARG(QString, serviceId));
    return out0;
}

void DownloaderBridgeAdaptor::pauseSession()
{
    // handle method call com.protocolone.launcher.dbus.Downloader.pauseSession
    QMetaObject::invokeMethod(parent(), "pauseSession");
}

void DownloaderBridgeAdaptor::resumeSession()
{
    // handle method call com.protocolone.launcher.dbus.Downloader.resumeSession
    QMetaObject::invokeMethod(parent(), "resumeSession");
}

void DownloaderBridgeAdaptor::start(const QString &serviceId, int startType)
{
    // handle method call com.protocolone.launcher.dbus.Downloader.start
    QMetaObject::invokeMethod(parent(), "start", Q_ARG(QString, serviceId), Q_ARG(int, startType));
}

void DownloaderBridgeAdaptor::stop(const QString &serviceId)
{
    // handle method call com.protocolone.launcher.dbus.Downloader.stop
    QMetaObject::invokeMethod(parent(), "stop", Q_ARG(QString, serviceId));
}

